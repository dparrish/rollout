#!/usr/bin/perl -w
# vim:tw=100 sw=2 expandtab ft=perl
=head1 NAME

820-smart

=head1 DESCRIPTION

Configure S.M.A.R.T. monitoring of the local disks

=head1 EXAMPLE

  class Sample => {
    smart_disks => [
      hda1 => "ide",
      hda2 => "ide",
    ],
  };

=head1 SKIPPABLE STEPS

=over

=item smart

Enable S.M.A.R.T monitoring

=back

=head1 COPYRIGHT

RolloutNG is based heavily on Rollout (https://github.com/dparrish/rollout) by David Parrish, Copyright 2010.   RolloutNG is Copyright by Chris Donovan 2014.

=cut

validate_config {
  smart_disks => {
    type => "hash_list",
    key => {
      type => "string",
      help => "Disk name",
    },
    value => {
      type => "string",
      help => "SMART Driver",
    },
  },
};

return unless i_should('smart');

my $text;
my @disks = flatten_list(c("$hostname/smart_disks"));
for (my $i = 0; $i < @disks; $i += 2) {
  my($disk, $driver) = ($disks[$i], $disks[$i + 1]);
  next unless $disk && $driver;
  $text .= "$disk -a -o on -H -S on -d $driver -m root\n";
}

return unless $text;

$m{$hostname}{_smart_configured_} = 1;

if (i_distro("debian", "ubuntu")) {
  package_check("smartmontools");
  text_install("/etc/smartd.conf", $text, "/etc/init.d/smartmontools restart");
} elsif (i_distro("redhat", "fedora", "centos")) {
  package_check("kernel-utils");
  text_install("/etc/smartd.conf", $text, "/etc/init.d/smartd restart");
  command("chkconfig smartd on");
} else {
  w "Can't deal with SMART configuration on ". i_os(). " ". i_distro();
}

