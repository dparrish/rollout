#!/usr/bin/perl -w
# vim:tw=100 sw=2 expandtab ft=perl
=head1 NAME

251-dir_install

=head1 DESCRIPTION

Downloads and installs a directory of files locally

=head1 EXAMPLE

  class Sample => {
    dir_install => {
      '/tmp/test' => {
        source => 'rollout:/files/test',
        sync => 1,
        dir_mode => 0755,
        mode => 0644,
        owner => 'root',
        group => 'daemon',
        command => "find /tmp/test -ls",
      },
    },
  };

=head1 OPTIONS

=over

=item dir_install/I<path>

Download the given directory of files and install them into I<path>.

=item dir_install/I<path>/source

The source of the directory. This can be a local file, a HTTP url, or a path starting with C<rollout:> which will be replaced with the Rollout server's base URL.

=item dir_install/I<path>/sync

The sync mode.
0 : Just download, don't delete anything
1 : Download, and ensure that only the regular files downloaded are in directory tree

=item dir_install/I<path>/mode

Set the mode of files.

=item dir_install/I<path>/dir_mode

Set the mode of directories.

=item dir_install/I<path>/owner

Set the owner of files and directories. This can be a name or an ID.

=item dir_install/I<path>/group

Set the group of files and directories. This can be a name or an ID.

=item dir_install/I<path>/command

Shell command to run after extraction. This command will be run from inside the destination directory of the extraction.

=back

=head1 COPYRIGHT

Copyright 2010 David Parrish

=cut

validate_config {
  dir_install => {
    type => "hash",
    key => {
      help => "Local path to install to",
      type => "path",
    },
    value => {
      type => "options",
      options => {
        command => { type => [ "string", "code" ] },
        dir_mode => { type => "int", range => [0, 07777], help => "Mode for directories" },
        gid => { type => "int", range => [0, 65535] },
        group => { type => "string", regex => qr/^[a-z0-9_\-.]+$/ },
        mode => { type => "int", range => [0, 07777], help => "Mode for files" },
        owner => { type => "string", regex => qr/^[a-z0-9_\-.]+$/ },
        source => { type => "string" },
        sync => { type => "boolean" },
        uid => { type => "int", range => [0, 65535] },
      },
    },
  },
};

my %dir_install = flatten_hash(c("$hostname/dir_install"));
while (my($dest, $src) = each(%dir_install)) {
  next unless i_should($dest);
  $src = { -src => $src } if ref $src ne 'HASH';
  $src = { map { (/^-/ ? $_ : "-$_") => $src->{$_} } keys %$src };
  $src->{-dest} |= $dest;
  $src->{-src} ||= $src->{-source} if $src->{-source};
  $src->{-cmd} ||= $src->{-command} if $src->{-command};
  dir_install(%$src);
}
