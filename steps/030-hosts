#!/usr/bin/perl -w
# vim:tw=100 sw=2 expandtab ft=perl
=head1 NAME

030-hosts

=head1 DESCRIPTION

This step configures the /etc/hosts file (or equivalent).

=head1 EXAMPLE

  class Sample => {
    domain_name => "sample.com",
    network => [ "home", "monitoring" ],
    hosts_append => {
      '192.168.1.1' => 'gw1',
      '192.168.1.2' => 'somehost',
    },
    extra_localhost => 'foohost',
  };

=head1 OPTIONS

=over

=item domain_name

This is the domain name for the machine. It will be appended to the hostname when
it's added to /etc/hosts

=item network

The list of networks this machine belongs to. Every other machine with the same network tag
will be added to to /etc/hosts, using the primary interface's IP address. This network can also be
used for firewalling.

=item hosts_append

A list of IP to hostname mappings to add directly to /etc/hosts

=item extra_localhost

Extra hostnames that will be considered 127.0.0.1

=back

=head1 SKIPPABLE STEPS

=over

=item localhost

Add a localhost entry including the full host name

=item network

Add entries for every machine in the local network

=item hosts_append

Add custom hosts_append entries

=back

=head1 COPYRIGHT

Copyright 2010 David Parrish

=cut


validate_config {
  domain_name => {
    help => "Domain name to append to the hostname",
    type => "domainname",
  },
  dns_seach => {
    help => "Domain names to append to the search suffixes",
    type => "domainname",
  },
  network => {
    help => "List of networks this host should join",
    type => "list",
    items => { type => "string" },
  },
  hosts_append => {
    help => "Entries to append to local hosts config",
    type => "hash",
    key => {
      help => "IP address of host",
      type => "ip",
    },
    value =>{
      help => "Space separated list of hostnames for the IP, canonical name first",
      type => "string",
    },
  },
  extra_localhost => {
    help => "Extra hostnames to add to 127.0.0.1 in /etc/hosts",
    type => "list",
    items => { type => "string" },
  },
};

if (i_should("localhost")) {
  my $domain = (flatten_list(c("$hostname/domain_name")))[0] || "localdomain";
  my @extra = flatten_list(c("$hostname/extra_localhost"));
  my $filename = "/etc/hosts";
  my $hosts = "localhost.localdomain localhost $hostname.$domain $hostname";
  if (i_os("solaris")) {
    $filename = "/etc/inet/hosts";
    $hosts = "$hostname $hostname.$domain localhost";
  }
  $hosts .= " ". join(" ", @extra) if @extra;
  file_append(-file => $filename,
              -add => "127.0.0.1\t$hosts",
              -match => qr/^127\.0\.0\.1\s.*/);
  file_append(-file => $filename,
              -add => "::1\t$hosts",
              -match => qr/^::1\s.*/);
  if (i_os("solaris") && -f "/etc/inet/ipnodes") {
    file_append(-file => "/etc/inet/ipnodes",
                -add => "127.0.0.1\t$hosts",
                -match => qr/(?:^127\.0\.0\.1\s.*|.+\s$hostname.*)/);
    file_append(-file => "/etc/inet/ipnodes",
                -add => "::1\t$hosts",
                -match => qr/(?:^::1\s.*|.+\s$hostname.*)/);
  }
}

my @networks = flatten_list(c("$hostname/network"));
if (i_should("network") && @networks) {
  v "Looking for other machines in my networks (". join(" ", @networks). ")";

  foreach my $d (keys %m) {
    next if $d eq $hostname || $d =~ /^[A-Z]/;
    next unless my $ip = i_ip($d);

    my $in_my_network = 0;
    foreach my $n (@networks) {
      $in_my_network += grep { $_ eq $n } flatten_list(c("$d/network"));
    }
    next unless $in_my_network;

    my @hostnames = uniq(c("$d/full_hostname"), map({ "$d.$_" } c("$d/domain_name")), $d);
    next unless @hostnames;
    my $h = "$ip\t". join(" ", @hostnames);
    v "Adding $d:$ip to /etc/hosts (in $in_my_network network)";
    my $filename = "/etc/hosts";
    $filename = "/etc/inet/hosts" if -f "/etc/inet/hosts";
    file_append(-file => $filename, -add => $h, -match => qr/(?:^\Q$ip\E\s|\s\Q$d\E)/);
  }
}

if (i_should("hosts_append")) {
  my %append = flatten_hash(c("$hostname/hosts_append"));
  while (my($ip, $alias) = each %append) {
    v "Adding $ip $alias to /etc/hosts";
    file_append(-file => "/etc/hosts", -add => "$ip\t$alias",
                -match => qr/(?:^\b\Q$ip\E\b\s|\s\b\Q$alias\b\E)/);
  }
}
